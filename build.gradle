plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
}

group = 'github.postyizhan'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    maven {
        name = "spigotmc-repo"
        url = "https://hub.spigotmc.org/nexus/content/repositories/snapshots/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven {
        name = "bstats-repo"
        url = "https://repo.codemc.org/repository/maven-public/"
    }
    maven {
        name = "jitpack"
        url = "https://jitpack.io"
    }
    maven {
        name = "placeholderapi"
        url = "https://repo.extendedclip.com/content/repositories/placeholderapi/"
    }
}

dependencies {
    // Spigot API
    compileOnly "org.spigotmc:spigot-api:1.13-R0.1-SNAPSHOT"
    
    // NBTAPI
    compileOnly "de.tr7zw:item-nbt-api-plugin:2.15.0"
    
    // bStats
    implementation "org.bstats:bstats-bukkit:3.0.2"

    // PlaceholderAPI
    compileOnly "me.clip:placeholderapi:2.11.5"
}

// 配置shadow插件，重定位bStats类
shadowJar {
    archiveBaseName.set(project.name)
    relocate "org.bstats", "github.postyizhan.monsterspawner.libs.bstats"
    minimize()
}

// 让build任务依赖shadowJar
build.dependsOn shadowJar

def targetJavaVersion = 8
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
    
    // 处理重复文件
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
}
